# Controller Manager is the main component in the ros2_control framework. It manages lifecycle of controllers, 
# access to the hardware interfaces and offers services to the ROS-world.
# Doc: https://control.ros.org/rolling/doc/ros2_control/controller_manager/doc/userdoc.html#subscribers
controller_manager:
  ros__parameters:
    # The frequency of controller manager’s real-time update loop. This loop reads states 
    # from hardware, updates controllers and writes commands to hardware.
    update_rate: 30 # Default: 100
    # use_sim_time: true
    
    # There can be several controllers for one robot 
    # They can share the same hardware interface (e.g. State interfaces)
    # because state interfaces just read data from the hardware
    diff_cont:
      type: diff_drive_controller/DiffDriveController

    joint_broad:
      type: joint_state_broadcaster/JointStateBroadcaster

# Parameters for the diff_drive_controller
# Controller for mobile robots with differential drive.
# Doc: https://control.ros.org/rolling/doc/ros2_controllers/diff_drive_controller/doc/userdoc.html
diff_cont:
  ros__parameters:

    publish_rate: 50.0 # Publishing rate (Hz) of the odometry and TF messages (default: 50.0)
    
    odom_frame_id (string): odom # Name of the frame for odometry. This frame is parent of base_frame_id when controller publishes odometry.
    base_frame_id: base_link # Name of the robot’s base frame that is child of the odometry frame (default: base_link)

    left_wheel_names: ['drivewhl_fl_joint', 'drivewhl_rl_joint']
    right_wheel_names: ['drivewhl_fr_joint', 'drivewhl_rr_joint']
    wheel_separation: 0.61
    wheel_radius: 0.165

    # use_stamped_vel: false

    # open_loop: false    

    # wheels_per_side: x
    # wheel_separation_multiplier: x
    # left_wheel_radius_multiplier: x
    # right_wheel_radius_multiplier: x

    # odom_frame_id: x
    # pose_covariance_diagonal: x
    # twist_covariance_diagonal: x
    # open_loop: x
    # enable_odom_tf: x

    # cmd_vel_timeout: x
    # publish_limited_velocity: x
    # velocity_rolling_window_size: x
    

    # linear.x.has_velocity_limits: false
    # linear.x.has_acceleration_limits: false
    # linear.x.has_jerk_limits: false
    # linear.x.max_velocity: NAN
    # linear.x.min_velocity: NAN
    # linear.x.max_acceleration: NAN
    # linear.x.min_acceleration: NAN
    # linear.x.max_jerk: NAN
    # linear.x.min_jerk: NAN

    # angular.z.has_velocity_limits: false
    # angular.z.has_acceleration_limits: false
    # angular.z.has_jerk_limits: false
    # angular.z.max_velocity: NAN
    # angular.z.min_velocity: NAN
    # angular.z.max_acceleration: NAN
    # angular.z.min_acceleration: NAN
    # angular.z.max_jerk: NAN
    # angular.z.min_jerk: NAN




# joint_broad:
#   ros__parameters: