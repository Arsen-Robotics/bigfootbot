# Dockerfile for setting up Realsense driver
#  https://github.com/jetsonhacks/installRealSenseSDK
ARG BASE_IMAGE="nvcr.io/nvidia/isaac/ros:aarch64-humble-nav2_c2befe2b1d90532fc15ef72650ccd7b0"
FROM ${BASE_IMAGE}

##### Build and install RealSense SDK (LibRealSense)
# https://github.com/jetsonhacks/installRealSenseSDK
COPY docker/scripts/build-librealsense.sh /opt/realsense/build-librealsense.sh
COPY docker/scripts/install-realsense-dependencies.sh /opt/realsense/install-realsense-dependencies.sh

RUN chmod +x /opt/realsense/install-realsense-dependencies.sh && /opt/realsense/install-realsense-dependencies.sh
# NB! we build a particular (NB! not the latest one) release of LibRealSense because the latest release (by 06.03.2023 4.51.1)
# of the ROS2 Wrapper for RealSense supported only LibRealSense v2.51.1 
RUN chmod +x /opt/realsense/build-librealsense.sh && /opt/realsense/build-librealsense.sh -v v2.51.1 
##### end of block 'build and install RealSense SDK'


##### Build and install ROS2 Wrapper for RealSense
# Create a ROS2 workspace
# Clone the latest ROS2 Intel® RealSense™ wrapper to '/ros2_ws/src/
RUN mkdir -p ${ROS_WS}/src \
    && cd ${ROS_WS}/src/ \
    && git clone https://github.com/IntelRealSense/realsense-ros.git -b 4.51.1
    # NB! We clone a particular release/tag 4.51.1 of the Librealsense in order to be sure 
    # it is compatible during a build with the RealSense SDK version (by 06.03.2023 is v2.51.1)

# --Install dependencies
# Install rosdep
#RUN apt-get install python3-rosdep -y

# Install ROS dependencies (ROS packages on which depend packages that located in the src directory)
# -y, --default-yes Tell the package manager to default to y or fail when installing
# -r Continue installing despite errors
# --skip-keys The specified rosdep keys will be ignored, i.e. not resolved and not installed
# --symlink-install if you change code in your source code, it will take effect, 
#   you don't have to compile it again (ony with python, not c++)
#   or e.g., the yaml configuration file in the workspace without having to rebuild the workspace.
# --event-handlers console_direct+ shows console output while building (can otherwise be found in the log directory)
RUN cd ${ROS_WS} \
    && source /opt/ros/humble/setup.bash \
    && rosdep update \
    && rosdep install -y -r --ignore-src --from-path src --rosdistro $ROS_DISTRO --skip-keys=librealsense2 \
    && colcon build 
# TODO! add --symlink-install to colcon build ?
##### end of block 'install ROS2 Wrapper for RealSense'