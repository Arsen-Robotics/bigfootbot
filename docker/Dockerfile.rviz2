# --- Docker commands ---
#
# Build docker image:
#   `docker build -f Dockerfile.rviz2 -t humble_rviz2:latest ..`
#   
# Run container with GUI support: 
#   `docker run -it --rm \
#     --gpus all \  NB! --gpus all is not needed when container is run on WSL2
#     -e DISPLAY \
#     -e QT_X11_NO_MITSHM=1 \ NB! check whether this is needed (it was needed to fix a bug with OpenGL)
#     -v /tmp/.X11-unix:/tmp/.X11-unix:rw \ 
#     --name humble_rviz2_container \
#     humble_rviz2:latest`
#
# To connect to a running container: 
#   `docker exec -it humble_rviz2_container bash`
# -------------------------

# --- ROS2 launch commands ---

#-----------------------------

# For running on Nvidia Jetson device (arm64/aarch64 Nvidia GPU accelerated)
# Image built: 05/23/2023
#ARG BASE_IMAGE="nvcr.io/nvidia/isaac/ros:aarch64-ros2_humble_33836e394da2d095a59afd2d151038f8"

# --- For running on x86/amd64 and arm64/aarch64
# NB! Not Nvidia GPU accelerated
# NOTE As of May 25, 2023, Ubuntu 22.04 "Jammy" was used.
# ROS2 version: communication libraries, message packages, command line tools. No GUI tools
# In the interest of keeping ros-core tag minimal in image size, developer tools such as rosdep, 
# colcon and vcstools are not shipped in ros_core, but in ros-base instead.
ARG BASE_IMAGE="ros:humble-ros-base"
# --------

FROM ${BASE_IMAGE}

# Zero interaction while installing or upgrading the system via apt. 
# It accepts the default answer for all questions.
ENV DEBIAN_FRONTEND=noninteractive

# ROS2 workspace
ENV ROS_WS=/ros2_ws

# If you only need to set the SHELL environment variable for other purposes, such as in a 
# script that will be run inside the container
# NB! This command sets the SHELL environment variable to /bin/bash, but it does not change 
# the default shell used to run subsequent commands in the Dockerfile
ENV SHELL=/bin/bash

# Sets the default shell for running subsequent commands in the Dockerfile
# (the default shell on Linux is ["/bin/sh", "-c"])
# -c: This option specifies that the next argument is the command to execute.
SHELL ["/bin/bash", "-c"] 

# Install rqt and rviz2
# software-properties-common - for `add-apt-repository` command
# `add-apt-repository ppa:kisak/kisak-mesa && apt upgrade -y` - to solve bug with rviz2 black screen
RUN apt-get update \
    && apt-get install -y \ 
    software-properties-common \ 
    ros-${ROS_DISTRO}-rqt \
    ros-${ROS_DISTRO}-rviz2 \
    && add-apt-repository ppa:kisak/kisak-mesa \
    && apt upgrade -y \
    && rm -rf /var/lib/apt/lists/* \
    && apt-get clean

##### Setup entrypoint
COPY docker/ros_entrypoint.sh /

# [] - is exec form
# exec form vs shell form - the difference is whether the specified command is invoked inside a shell or not
# Exec - runs the process directly (not inside a shell) (doesn't create separate process to run a command/program)
# So shell process with PID 1 is replaced by the process of running program in exec mode
ENTRYPOINT ["/ros_entrypoint.sh"]

# run ros2 launch command
CMD ["rviz2"]
#CMD ["bash"]